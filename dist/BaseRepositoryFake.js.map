{"version":3,"sources":["../dist-esnext/BaseRepositoryFake.js"],"names":["save","getById","getByIds","find","entities","fakeDbCollection","collectionName","createRepository","curry","url","db","getDbCollection","entity","push","Promise","resolve","id","ids","query","options"],"mappings":";;;;;;QAmBgBA,I,GAAAA,I;QAIAC,O,GAAAA,O;QAGAC,Q,GAAAA,Q;QAGAC,I,GAAAA,I;;AA7BhB;;;;;;AACA;AACO,IAAIC,8BAAW,EAAf;AACP,MAAMC,mBAAmB,EAAEC,gBAAgB,gBAAlB,EAAzB;AACO,MAAMC,8CAAmB,gBAAEC,KAAF,CAAQ,CAACF,cAAD,EAAiBG,GAAjB,KAAyB;AAC7D,YAHOL,QAGP,cAAW,EAAX;AACA,UAAMM,KAAKD,GAAX;AACAJ,qBAAiBC,cAAjB,GAAkCA,cAAlC;AACA,WAAO;AACHI,UADG;AAEHJ,sBAFG;AAGHK,uBAHG;AAIHX,YAJG;AAKHC,eALG;AAMHC,gBANG;AAOHC;AAPG,KAAP;AASH,CAb+B,CAAzB;AAcA,MAAMQ,4CAAkB,MAAMN,gBAA9B;AACA,SAASL,IAAT,CAAcY,MAAd,EAAsB;AACzBR,aAASS,IAAT,CAAcD,MAAd;AACA,WAAOE,QAAQC,OAAR,CAAgBH,MAAhB,CAAP;AACH;AACM,SAASX,OAAT,CAAiBe,EAAjB,EAAqB;AACxB,WAAOF,QAAQC,OAAR,CAAgBX,SAAS,CAAT,CAAhB,CAAP;AACH;AACM,SAASF,QAAT,CAAkBe,GAAlB,EAAuB;AAC1B,WAAOH,QAAQC,OAAR,CAAgBX,QAAhB,CAAP;AACH;AACM,SAASD,IAAT,CAAce,KAAd,EAAqBC,OAArB,EAA8B;AACjC,WAAOL,QAAQC,OAAR,CAAgBX,QAAhB,CAAP;AACH;AACD;AACA","file":"BaseRepositoryFake.js","sourcesContent":["import R from 'ramda';\r\n// This is a fake repository to be used with subs/mocks\r\nexport let entities = [];\r\nconst fakeDbCollection = { collectionName: 'collectionName' };\r\nexport const createRepository = R.curry((collectionName, url) => {\r\n    entities = [];\r\n    const db = url;\r\n    fakeDbCollection.collectionName = collectionName;\r\n    return {\r\n        db,\r\n        collectionName,\r\n        getDbCollection,\r\n        save,\r\n        getById,\r\n        getByIds,\r\n        find,\r\n    };\r\n});\r\nexport const getDbCollection = () => fakeDbCollection;\r\nexport function save(entity) {\r\n    entities.push(entity);\r\n    return Promise.resolve(entity);\r\n}\r\nexport function getById(id) {\r\n    return Promise.resolve(entities[0]);\r\n}\r\nexport function getByIds(ids) {\r\n    return Promise.resolve(entities);\r\n}\r\nexport function find(query, options) {\r\n    return Promise.resolve(entities);\r\n}\r\n// }\r\n//# sourceMappingURL=BaseRepositoryFake.js.map"]}